{"name":"Pyverilog","tagline":"Python-based Hardware Design Processing Toolkit for Verilog HDL","body":"Publication\r\n==============================\r\n\r\nIf you use Pyverilog in your research, please cite my paper.\r\n\r\n- Shinya Takamaeda-Yamazaki: Pyverilog: A Python-based Hardware Design Processing Toolkit for Verilog HDL, 11th International Symposium on Applied Reconfigurable Computing (ARC 2015) (Poster), Lecture Notes in Computer Science, Vol.9040/2015, pp.451-460, April 2015.\r\n[Paper](http://link.springer.com/chapter/10.1007/978-3-319-16214-0_42)\r\n\r\n```\r\n@inproceedings{Takamaeda:2015:ARC:Pyverilog,\r\ntitle={Pyverilog: A Python-Based Hardware Design Processing Toolkit for Verilog HDL},\r\nauthor={Takamaeda-Yamazaki, Shinya},\r\nbooktitle={Applied Reconfigurable Computing},\r\nmonth={Apr},\r\nyear={2015},\r\npages={451-460},\r\nvolume={9040},\r\nseries={Lecture Notes in Computer Science},\r\npublisher={Springer International Publishing},\r\ndoi={10.1007/978-3-319-16214-0_42},\r\nurl={http://dx.doi.org/10.1007/978-3-319-16214-0_42},\r\n}\r\n```\r\n\r\n\r\nWhat's Pyverilog?\r\n==============================\r\n\r\nPyverilog is an open-source hardware design processing toolkit for Verilog HDL. All source codes are written in Python.\r\n\r\nPyverilog includes **(1) code parser, (2) dataflow analyzer, (3) control-flow analyzer and (4) code generator**.\r\nYou can create your own design analyzer, code translator and code generator of Verilog HDL based on this toolkit.\r\n\r\n\r\nLicense\r\n==============================\r\n\r\nApache License 2.0\r\n(http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\nThis software package includes PLY-3.4 in \"vparser/ply\". The license of PLY is BSD.\r\n\r\n\r\nCopyright and Contact\r\n==============================\r\n\r\nCopyright (C) 2013, Shinya Takamaeda-Yamazaki\r\n\r\nE-mail: shinya\\_at\\_is.naist.jp\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}